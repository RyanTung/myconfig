diff --git a/drivers/video/fbdev/msm/mdss_fb.c b/drivers/video/fbdev/msm/mdss_fb.c
index fe12896..0d89506 100644
--- a/drivers/video/fbdev/msm/mdss_fb.c
+++ b/drivers/video/fbdev/msm/mdss_fb.c
@@ -55,6 +55,8 @@
 #include "mdss_debug.h"
 #include "mdss_smmu.h"
 #include "mdss_mdp.h"
+#include "mdss_dsi_cmd.h"
+#include "mdss_dsi.h"
 
 #ifdef CONFIG_FB_MSM_TRIPLE_BUFFER
 #define MDSS_FB_NUM 3
@@ -460,6 +462,64 @@ static ssize_t mdss_fb_get_src_split_info(struct device *dev,
 
 	return ret;
 }
+#define RBUF_LEN 8 
+static char  rbuf[RBUF_LEN] = {'\0'};
+static int addr = 0;
+static int rlen = 0;
+
+static char read_reg[1] = {0x00};
+static struct dsi_cmd_desc read_reg_cmd = {
+		{DTYPE_GEN_READ2, 1, 0, 0, 100, sizeof(read_reg)}, read_reg};
+
+
+void mdss_dsi_read_reg_of_panel(struct mdss_dsi_ctrl_pdata *ctrl)
+{
+	struct dcs_cmd_req cmdreq;
+
+	read_reg[0] = addr; 
+	cmdreq.cmds = &read_reg_cmd;
+	cmdreq.cmds_cnt = 1;
+	cmdreq.flags = CMD_REQ_RX | CMD_REQ_LP_MODE |CMD_REQ_DMA_TPG;
+	cmdreq.rlen = rlen;
+	cmdreq.cb = NULL;
+	cmdreq.rbuf = rbuf;
+	mdss_dsi_cmdlist_put(ctrl, &cmdreq);
+}
+
+static ssize_t msm_panel_register_show(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	int i = 0;
+	struct fb_info *fbi = dev_get_drvdata(dev);
+	struct msm_fb_data_type *mfd = fbi->par;
+	struct mdss_panel_data *pdata;
+	struct mdss_dsi_ctrl_pdata *ctrl_pdata = NULL;
+	pdata = dev_get_platdata(&mfd->pdev->dev);
+	ctrl_pdata = container_of(pdata, struct mdss_dsi_ctrl_pdata,
+				panel_data);
+	mdss_dsi_read_reg_of_panel(ctrl_pdata);	
+	pr_err("********************\n");
+	for(i=0;i < rlen;i++)
+		pr_err("rbuf[%d] = 0x%x\n", i, rbuf[i]);
+	pr_err("********************\n");
+
+	return 0;
+}
+
+static ssize_t msm_panel_register_store(struct device *dev,
+	struct device_attribute *attr, const char *buf, size_t count)
+{
+	int num = 0;
+	num = sscanf(buf, "%d %d", &addr, &rlen);
+	if (num != 2) {
+		pr_err("The reg addr and read count not right, Input count =%d\n", num);
+		return num;
+	} else {
+		pr_err("Addr = 0x%x,and rlen = %d\n", addr, rlen);
+	}
+
+	return count;
+}
 
 static ssize_t mdss_fb_get_thermal_level(struct device *dev,
 		struct device_attribute *attr, char *buf)
@@ -934,6 +994,8 @@ static DEVICE_ATTR(measured_fps, S_IRUGO | S_IWUSR | S_IWGRP,
 static DEVICE_ATTR(msm_fb_persist_mode, S_IRUGO | S_IWUSR,
 	mdss_fb_get_persist_mode, mdss_fb_change_persist_mode);
 static DEVICE_ATTR(idle_power_collapse, S_IRUGO, mdss_fb_idle_pc_notify, NULL);
+static DEVICE_ATTR(msm_panel_register, S_IRUGO | S_IWUSR | S_IWGRP,
+	msm_panel_register_show, msm_panel_register_store);
 
 static struct attribute *mdss_fb_attrs[] = {
 	&dev_attr_msm_fb_type.attr,
@@ -949,6 +1011,7 @@ static struct attribute *mdss_fb_attrs[] = {
 	&dev_attr_measured_fps.attr,
 	&dev_attr_msm_fb_persist_mode.attr,
 	&dev_attr_idle_power_collapse.attr,
+	&dev_attr_msm_panel_register.attr,
 	NULL,
 };
 
